{
  "cells": [
    {
      "metadata": {
        "_cell_guid": "f257306b-ff46-4137-a8af-53175380f928",
        "_uuid": "1f0b7f17bae0cc761404e091f73d7fa71f25bf03"
      },
      "cell_type": "markdown",
      "source": "### Introduction \n-- Multiple data sources\n- PM2.5: Particles with an aerodynamic diameter less than  2.5μm\n \n"
    },
    {
      "metadata": {
        "_cell_guid": "b1076dfc-b9ad-4769-8c92-a6c4dae69d19",
        "_uuid": "8f2839f25d086af736a60e9eeb907d3b93b6e0e5",
        "trusted": true,
        "collapsed": true
      },
      "cell_type": "code",
      "source": "import numpy as np\nimport pandas as pd\nimport bq_helper\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom mpl_toolkits.basemap import Basemap\n%matplotlib inline",
      "execution_count": 2,
      "outputs": []
    },
    {
      "metadata": {
        "_cell_guid": "3a9b3ebd-0c7f-499c-b4a7-196e4af35dde",
        "_uuid": "614888c6cd76a427e9a140a3e2c5ddaaefb9aad4",
        "trusted": true
      },
      "cell_type": "code",
      "source": "open_aq = bq_helper.BigQueryHelper(active_project=\"bigquery-public-data\",\n                                   dataset_name=\"openaq\")\nopen_aq.list_tables()",
      "execution_count": 3,
      "outputs": [
        {
          "data": {
            "text/plain": "['global_air_quality']"
          },
          "execution_count": 3,
          "metadata": {},
          "output_type": "execute_result"
        }
      ]
    },
    {
      "metadata": {
        "_cell_guid": "fa5f67a7-ced9-48b1-a247-321894cb8d3d",
        "_uuid": "b3faba421c0070583c694f722a82c2525037568d",
        "trusted": true
      },
      "cell_type": "code",
      "source": "open_aq.head(\"global_air_quality\")",
      "execution_count": 4,
      "outputs": [
        {
          "data": {
            "text/html": "<div>\n<style>\n    .dataframe thead tr:only-child th {\n        text-align: right;\n    }\n\n    .dataframe thead th {\n        text-align: left;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>location</th>\n      <th>city</th>\n      <th>country</th>\n      <th>pollutant</th>\n      <th>value</th>\n      <th>timestamp</th>\n      <th>unit</th>\n      <th>source_name</th>\n      <th>latitude</th>\n      <th>longitude</th>\n      <th>averaged_over_in_hours</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Mobile_Cle Elum</td>\n      <td>037</td>\n      <td>US</td>\n      <td>pm25</td>\n      <td>0.00</td>\n      <td>2017-09-26 20:00:00+00:00</td>\n      <td>µg/m³</td>\n      <td>AirNow</td>\n      <td>47.197630</td>\n      <td>-120.958230</td>\n      <td>1.0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Mobile_WhiteSalmon</td>\n      <td>039</td>\n      <td>US</td>\n      <td>pm25</td>\n      <td>0.00</td>\n      <td>2017-09-26 20:00:00+00:00</td>\n      <td>µg/m³</td>\n      <td>AirNow</td>\n      <td>45.732414</td>\n      <td>-121.492330</td>\n      <td>1.0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Mobile_Newport</td>\n      <td>051</td>\n      <td>US</td>\n      <td>pm25</td>\n      <td>0.00</td>\n      <td>2017-09-21 18:00:00+00:00</td>\n      <td>µg/m³</td>\n      <td>AirNow</td>\n      <td>48.186485</td>\n      <td>-117.049160</td>\n      <td>1.0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>FR20047</td>\n      <td>Ain</td>\n      <td>FR</td>\n      <td>pm10</td>\n      <td>16.03</td>\n      <td>2018-02-25 22:00:00+00:00</td>\n      <td>µg/m³</td>\n      <td>EEA France</td>\n      <td>45.823223</td>\n      <td>4.953958</td>\n      <td>1.0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>FR20047</td>\n      <td>Ain</td>\n      <td>FR</td>\n      <td>o3</td>\n      <td>70.98</td>\n      <td>2018-02-25 22:00:00+00:00</td>\n      <td>µg/m³</td>\n      <td>EEA France</td>\n      <td>45.823223</td>\n      <td>4.953958</td>\n      <td>1.0</td>\n    </tr>\n  </tbody>\n</table>\n</div>",
            "text/plain": "             location city country pollutant  value                 timestamp  \\\n0     Mobile_Cle Elum  037      US      pm25   0.00 2017-09-26 20:00:00+00:00   \n1  Mobile_WhiteSalmon  039      US      pm25   0.00 2017-09-26 20:00:00+00:00   \n2      Mobile_Newport  051      US      pm25   0.00 2017-09-21 18:00:00+00:00   \n3             FR20047  Ain      FR      pm10  16.03 2018-02-25 22:00:00+00:00   \n4             FR20047  Ain      FR        o3  70.98 2018-02-25 22:00:00+00:00   \n\n    unit source_name   latitude   longitude  averaged_over_in_hours  \n0  µg/m³      AirNow  47.197630 -120.958230                     1.0  \n1  µg/m³      AirNow  45.732414 -121.492330                     1.0  \n2  µg/m³      AirNow  48.186485 -117.049160                     1.0  \n3  µg/m³  EEA France  45.823223    4.953958                     1.0  \n4  µg/m³  EEA France  45.823223    4.953958                     1.0  "
          },
          "execution_count": 4,
          "metadata": {},
          "output_type": "execute_result"
        }
      ]
    },
    {
      "metadata": {
        "_cell_guid": "8900eaee-a5e8-4a80-ac1d-a2147d8f5b3c",
        "_uuid": "070034e84ad1c5926fc083bd6c9b4beaa3d0cca1",
        "scrolled": true,
        "trusted": true
      },
      "cell_type": "code",
      "source": "# What ten cities have the most measurements taken there?\nquery1 = \"\"\"SELECT city\n            FROM `bigquery-public-data.openaq.global_air_quality`\n            WHERE country = 'US'\n        \"\"\"\nus_cities = open_aq.query_to_pandas_safe(query1)\nus_cities.city.value_counts().head(10)",
      "execution_count": 5,
      "outputs": [
        {
          "data": {
            "text/plain": "Phoenix-Mesa-Scottsdale                     85\nHouston                                     79\nLos Angeles-Long Beach-Santa Ana            60\nNew York-Northern New Jersey-Long Island    57\nRiverside-San Bernardino-Ontario            56\nSan Francisco-Oakland-Fremont               50\nSacramento--Arden-Arcade--Roseville         42\nChicago-Naperville-Joliet                   37\nWashington-Arlington-Alexandria             34\nLas Vegas-Paradise                          31\nName: city, dtype: int64"
          },
          "execution_count": 5,
          "metadata": {},
          "output_type": "execute_result"
        }
      ]
    },
    {
      "metadata": {
        "_cell_guid": "8aecf362-3200-436c-949d-3c5936ab4bba",
        "_uuid": "4a0465220168f2df2d5ff3eb78b7fe894dc05a79",
        "scrolled": true,
        "trusted": true
      },
      "cell_type": "code",
      "source": "# Which U.S. city has the highest pm2.5 value in average?\nquery2 = \"\"\"SELECT city, pollutant, AVG(value) AS average_value\n            FROM `bigquery-public-data.openaq.global_air_quality`\n            WHERE country = 'US' AND pollutant = 'pm25'\n            GROUP BY city,pollutant\n            ORDER BY average_value DESC\n            LIMIT 10\n        \"\"\"\nhigh_pm25_city = open_aq.query_to_pandas_safe(query2)\nhigh_pm25_city",
      "execution_count": 6,
      "outputs": [
        {
          "data": {
            "text/html": "<div>\n<style>\n    .dataframe thead tr:only-child th {\n        text-align: right;\n    }\n\n    .dataframe thead th {\n        text-align: left;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>city</th>\n      <th>pollutant</th>\n      <th>average_value</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>IDAHO</td>\n      <td>pm25</td>\n      <td>114.366667</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>CLACKAMAS</td>\n      <td>pm25</td>\n      <td>59.100000</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Hanford-Corcoran</td>\n      <td>pm25</td>\n      <td>53.000000</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>SAN JOAQUIN</td>\n      <td>pm25</td>\n      <td>48.000000</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Ukiah</td>\n      <td>pm25</td>\n      <td>45.000000</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>SONOMA</td>\n      <td>pm25</td>\n      <td>44.000000</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>LOS ANGELES</td>\n      <td>pm25</td>\n      <td>33.100000</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>Fresno</td>\n      <td>pm25</td>\n      <td>32.000000</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>MT1</td>\n      <td>pm25</td>\n      <td>31.333333</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>Bangor</td>\n      <td>pm25</td>\n      <td>31.000000</td>\n    </tr>\n  </tbody>\n</table>\n</div>",
            "text/plain": "               city pollutant  average_value\n0             IDAHO      pm25     114.366667\n1         CLACKAMAS      pm25      59.100000\n2  Hanford-Corcoran      pm25      53.000000\n3       SAN JOAQUIN      pm25      48.000000\n4             Ukiah      pm25      45.000000\n5            SONOMA      pm25      44.000000\n6       LOS ANGELES      pm25      33.100000\n7            Fresno      pm25      32.000000\n8               MT1      pm25      31.333333\n9            Bangor      pm25      31.000000"
          },
          "execution_count": 6,
          "metadata": {},
          "output_type": "execute_result"
        }
      ]
    },
    {
      "metadata": {
        "_cell_guid": "8e34b12d-f265-451f-96cb-16dd150e1f24",
        "_uuid": "47ab1d05aa9d9105c7da2ae1472480a182d3407f",
        "trusted": true
      },
      "cell_type": "code",
      "source": "plt.subplots(figsize=(15,8))\nsns.barplot(x='city',y='average_value',data=high_pm25_city,palette='inferno',edgecolor=sns.color_palette('dark',7))\nplt.ylabel('PM2.5 values in µg/m³', fontsize=20)\nplt.xticks(rotation=360)\nplt.xlabel('city', fontsize=20)\nplt.title('Average value of PM2.5 in different US cities', fontsize=24)\nplt.show()",
      "execution_count": 7,
      "outputs": [
        {
          "data": {
            "image/png": "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\nkiRJkoD/D1gVHzuLNd3RAAAAAElFTkSuQmCC\n",
            "text/plain": "<matplotlib.figure.Figure at 0x7f988a42dba8>"
          },
          "metadata": {},
          "output_type": "display_data"
        }
      ]
    },
    {
      "metadata": {
        "_cell_guid": "5443182a-3f75-40b6-9073-2e8e22e2e623",
        "_uuid": "d3d4894d76f471a6c9cccf3bd3628c819055da52",
        "trusted": true
      },
      "cell_type": "code",
      "source": "hacker_news = bq_helper.BigQueryHelper(\"bigquery-public-data\", \"hacker_news\")\nhacker_news.head(\"comments\")",
      "execution_count": 8,
      "outputs": [
        {
          "data": {
            "text/html": "<div>\n<style>\n    .dataframe thead tr:only-child th {\n        text-align: right;\n    }\n\n    .dataframe thead th {\n        text-align: left;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>id</th>\n      <th>by</th>\n      <th>author</th>\n      <th>time</th>\n      <th>time_ts</th>\n      <th>text</th>\n      <th>parent</th>\n      <th>deleted</th>\n      <th>dead</th>\n      <th>ranking</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>2701393</td>\n      <td>5l</td>\n      <td>5l</td>\n      <td>1309184881</td>\n      <td>2011-06-27 14:28:01+00:00</td>\n      <td>And the glazier who fixed all the broken windo...</td>\n      <td>2701243</td>\n      <td>None</td>\n      <td>None</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>5811403</td>\n      <td>99</td>\n      <td>99</td>\n      <td>1370234048</td>\n      <td>2013-06-03 04:34:08+00:00</td>\n      <td>Does canada have the equivalent of H1B/Green c...</td>\n      <td>5804452</td>\n      <td>None</td>\n      <td>None</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>21623</td>\n      <td>AF</td>\n      <td>AF</td>\n      <td>1178992400</td>\n      <td>2007-05-12 17:53:20+00:00</td>\n      <td>Speaking of Rails, there are other options in ...</td>\n      <td>21611</td>\n      <td>None</td>\n      <td>None</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>10159727</td>\n      <td>EA</td>\n      <td>EA</td>\n      <td>1441206574</td>\n      <td>2015-09-02 15:09:34+00:00</td>\n      <td>Humans and large livestock (and maybe even pet...</td>\n      <td>10159396</td>\n      <td>None</td>\n      <td>None</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>2988424</td>\n      <td>Iv</td>\n      <td>Iv</td>\n      <td>1315853580</td>\n      <td>2011-09-12 18:53:00+00:00</td>\n      <td>I must say I reacted in the same way when I re...</td>\n      <td>2988179</td>\n      <td>None</td>\n      <td>None</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n</div>",
            "text/plain": "         id  by author        time                   time_ts  \\\n0   2701393  5l     5l  1309184881 2011-06-27 14:28:01+00:00   \n1   5811403  99     99  1370234048 2013-06-03 04:34:08+00:00   \n2     21623  AF     AF  1178992400 2007-05-12 17:53:20+00:00   \n3  10159727  EA     EA  1441206574 2015-09-02 15:09:34+00:00   \n4   2988424  Iv     Iv  1315853580 2011-09-12 18:53:00+00:00   \n\n                                                text    parent deleted  dead  \\\n0  And the glazier who fixed all the broken windo...   2701243    None  None   \n1  Does canada have the equivalent of H1B/Green c...   5804452    None  None   \n2  Speaking of Rails, there are other options in ...     21611    None  None   \n3  Humans and large livestock (and maybe even pet...  10159396    None  None   \n4  I must say I reacted in the same way when I re...   2988179    None  None   \n\n   ranking  \n0        0  \n1        0  \n2        0  \n3        0  \n4        0  "
          },
          "execution_count": 8,
          "metadata": {},
          "output_type": "execute_result"
        }
      ]
    },
    {
      "metadata": {
        "_cell_guid": "d45f962d-8e49-4e68-bfdd-c7bebe4dd9e1",
        "_uuid": "76d7970b9acb7c14b7377f3d03b0d3d0e0963b09",
        "trusted": true
      },
      "cell_type": "code",
      "source": "popular_comments = hacker_news.query_to_pandas_safe(\"\"\"\n    SELECT parent, COUNT(id) AS num_replies\n    FROM `bigquery-public-data.hacker_news.comments`\n    GROUP BY parent\n    HAVING COUNT(id) > 500\n    ORDER BY 2 DESC\n\"\"\")\npopular_comments.head()",
      "execution_count": 9,
      "outputs": [
        {
          "data": {
            "text/html": "<div>\n<style>\n    .dataframe thead tr:only-child th {\n        text-align: right;\n    }\n\n    .dataframe thead th {\n        text-align: left;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>parent</th>\n      <th>num_replies</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>363</td>\n      <td>1311</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>9812245</td>\n      <td>902</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>9996333</td>\n      <td>850</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>9303396</td>\n      <td>785</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>10152809</td>\n      <td>733</td>\n    </tr>\n  </tbody>\n</table>\n</div>",
            "text/plain": "     parent  num_replies\n0       363         1311\n1   9812245          902\n2   9996333          850\n3   9303396          785\n4  10152809          733"
          },
          "execution_count": 9,
          "metadata": {},
          "output_type": "execute_result"
        }
      ]
    },
    {
      "metadata": {
        "_cell_guid": "04b6d715-665c-4895-98a9-381c4afb553b",
        "_uuid": "cdc9c45928147608e16d685e95f445c2d448200f",
        "trusted": true
      },
      "cell_type": "code",
      "source": "stories_by_type = hacker_news.query_to_pandas_safe(\"\"\"\n    SELECT type, COUNT(id) AS num_of_type\n    FROM `bigquery-public-data.hacker_news.full`\n    GROUP BY type\n\"\"\")\nstories_by_type",
      "execution_count": 10,
      "outputs": [
        {
          "data": {
            "text/html": "<div>\n<style>\n    .dataframe thead tr:only-child th {\n        text-align: right;\n    }\n\n    .dataframe thead th {\n        text-align: left;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>type</th>\n      <th>num_of_type</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>comment</td>\n      <td>13569163</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>story</td>\n      <td>2858107</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>pollopt</td>\n      <td>11826</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>job</td>\n      <td>10221</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>poll</td>\n      <td>1729</td>\n    </tr>\n  </tbody>\n</table>\n</div>",
            "text/plain": "      type  num_of_type\n0  comment     13569163\n1    story      2858107\n2  pollopt        11826\n3      job        10221\n4     poll         1729"
          },
          "execution_count": 10,
          "metadata": {},
          "output_type": "execute_result"
        }
      ]
    }
  ],
  "metadata": {
    "kernelspec": {
      "display_name": "Python 3",
      "language": "python",
      "name": "python3"
    },
    "language_info": {
      "codemirror_mode": {
        "name": "ipython",
        "version": 3
      },
      "file_extension": ".py",
      "mimetype": "text/x-python",
      "name": "python",
      "nbconvert_exporter": "python",
      "pygments_lexer": "ipython3",
      "version": "3.6.4"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 1
}